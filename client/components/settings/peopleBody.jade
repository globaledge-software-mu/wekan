template(name="people")
  .setting-content
    unless currentUser.isAuthorised
      | {{_ 'error-notAuthorized'}}
    else
      .content-title.ext-box
        .ext-box-left
        .ext-box-right
          span {{_ 'people-number'}} #{peopleNumber}
      .content-body
        .side-menu
          ul
            li.active
              a.js-setting-menu(data-id="people-setting") {{_ 'people'}}
            if currentUser.isAdmin
              li.active.hide
                a.js-setting-menu(data-id="roles-setting") {{_ 'roles'}}
              li.active
                a.js-setting-menu(data-id="user-groups-setting") {{_ 'user-groups'}}
              li.active
                a.js-setting-menu(data-id="assigned-user-groups-setting") {{_ 'assigned-user-groups'}}
        .main-body
          if loading.get
            +spinner
          else if people.get
            +peopleGeneral
          else if roles.get
            +rolesGeneral
          else if userGroups.get
            +userGroupsGeneral
          else if assignedUserGroups.get
            +assignedUserGroupsGeneral

template(name="createNewUserPopup")
  if loading.get
    +spinner
  else
    form
      label
        | {{_ 'fullname'}}
        span.error.hide.fullname-blank.user-not-created
          | {{_ 'error-fullname-blank'}}
        input.js-profile-fullname(type="text" value="" autofocus)
      label
        | {{_ 'username'}}
        span.error.hide.username-blank.user-not-created
          | {{_ 'error-username-blank'}}
        span.error.hide.username-taken.user-not-created
          | {{_ 'error-username-taken'}}
        input.js-profile-username(type="text" value="")
      label
        | {{_ 'email'}}
        span.error.hide.valid-email-not-entered.user-not-created
          | {{_ 'error-valid-email-not-entered'}}
        span.error.hide.email-taken.user-not-created
          | {{_ 'error-email-taken'}}
        input.js-profile-email(type="email" value="")
      if currentUser.isAdmin
        label
          | {{_ 'admin'}}
          select.select-role.js-profile-isadmin
            option(value="false" selected) {{_ 'no'}}
            option(value="true") {{_ 'yes'}}
      label
        | {{_ 'role'}}
        span.error.hide.role-not-selected.user-not-created
          | {{_ 'error-role-not-selected'}}
        +roleOptions
      hr
      div.buttonsContainer
        input.primary.wide(type="submit" value="{{_ 'save'}}")
        div
        input#cancelButton.primary.wide(type="button" value="{{_ 'cancel'}}")

template(name="peopleGeneral")
  button#create-user.btn.btn-primary {{_ 'add-user'}}
  table
    tbody
      tr
        th {{_ 'username'}}
        th {{_ 'fullname'}}
        th {{_ 'admin'}}
        th {{_ 'role'}}
        th {{_ 'email'}}
        th {{_ 'verified'}}
        th {{_ 'createdAt'}}
        th {{_ 'active'}}
        th {{_ 'authentication-method'}}
        th
      // if isAdmin, user gets to see all the users
      if currentUser.isAdmin
        each user in peopleList
          +peopleRow(userId=user._id)
      // if isManagerAndNotAdmin, user gets to see 'coaches', 'coachees' and other users that are neither admin nor manager
      if currentUser.isManagerAndNotAdmin
        each user in managerUsersList
          +peopleRow(userId=user._id)

      // if isCoachAndNotAdmin, user gets to see 'coachees' and other users that are neither admin nor manager and not even coach
      if currentUser.isCoachAndNotAdmin
        each user in coachUsersList
          +peopleRow(userId=user._id)
        

template(name="peopleRow")
  tr
    td.username {{ userData.username }}
    td {{ userData.profile.fullname }}
    td
      if userData.isAdmin
        | {{_ 'yes'}}
      else
        | {{_ 'no'}}
    td {{ roleName }}
    td {{ userData.emails.[0].address }}
    td
      if userData.emails.[0].verified
        | {{_ 'yes'}}
      else
        | {{_ 'no'}}
    td {{ moment userData.createdAt 'LLL' }}
    td
      if userData.loginDisabled
        | {{_ 'no'}}
      else
        | {{_ 'yes'}}
    td {{_ userData.authenticationMethod }}
    td
      a.edit-user
        | {{_ 'edit'}}

template(name="editUserPopup")
  if loading.get
    +spinner
  else
    form#editUserPopup
      label.hide.userId(type="text" value=user._id)
      label
        | {{_ 'fullname'}}
        input.js-profile-fullname(type="text" value=user.profile.fullname autofocus)
      label
        | {{_ 'username'}}
        span.error.hide.username-taken
          | {{_ 'error-username-taken'}}
        if isLdap
          input.js-profile-username(type="text" value=user.username readonly)
        else
          input.js-profile-username(type="text" value=user.username)
      label
        | {{_ 'email'}}
        span.error.hide.email-taken
          | {{_ 'error-email-taken'}}
        if isLdap
          input.js-profile-email(type="email" value="{{user.emails.[0].address}}" readonly)
        else
          input.js-profile-email(type="email" value="{{user.emails.[0].address}}")
      if currentUser.isAdmin
        label
          | {{_ 'admin'}}
          select.select-role.js-profile-isadmin
            option(value="false") {{_ 'no'}}
            option(value="true" selected="{{user.isAdmin}}") {{_ 'yes'}}
      label
        | {{_ 'role'}}
        +roleOptions
      label
        | {{_ 'active'}}
        select.select-active.js-profile-isactive
          option(value="false") {{_ 'yes'}}
          option(value="true" selected="{{user.loginDisabled}}") {{_ 'no'}}
      hr
      label
        | {{_ 'password'}}
        input.js-profile-password(type="password")
      div.buttonsContainer
        input.primary.wide(type="submit" value="{{_ 'save'}}")
        div
        if currentUser.isAdmin
          input#deleteButton.primary.wide(type="button" value="{{_ 'delete'}}")

template(name="roleOptions")
  select.select-role.js-profile-role
    option(value='', selected='selected') Select One
    // if isAdmin, user gets to choose from all the roles
    if currentUser.isAdmin
      each role in roles
        if currentRole role._id
          option(value='{{role._id}}' selected) {{role.name}}
        else
          option(value='{{role._id}}') {{role.name}}
    // if isManagerAndNotAdmin, user gets to choose from 'coach' or 'coachee'
    if currentUser.isManagerAndNotAdmin
      each role in coachOrCoacheeRoles
        if currentRole role._id
          option(value='{{role._id}}' selected) {{role.name}}
        else
          option(value='{{role._id}}') {{role.name}}
    // if isCoachAndNotAdmin, user gets to choose 'coachee'
    if currentUser.isCoachAndNotAdmin
      if currentRole coacheeRole._id
        option(value='{{coacheeRole._id}}' selected) {{coacheeRole.name}}
      else
        option(value='{{coacheeRole._id}}') {{coacheeRole.name}}

template(name="rolesGeneral")
  table.roleList
    tbody
      tr
        th {{_ 'role'}}
        th {{_ 'permissions'}}
        th
      each role in roles
        +roleRow(roleId=role._id)
  button.js-open-create-role.primary {{_ 'create'}}

template(name="roleRow")
  tr
    td.rolename {{ roleData.name }}
    td 
      each permission in roleData.permissions
        span.badge {{permission.group}}:
          span.access {{permission.access}}

    td
      a.edit-role
        | {{_ 'edit'}}

template(name="createRolePopup")
  form
    label.hide.roleId(type="text" value=role._id)
    label
      | {{_ 'name'}} {{_id}}
      unless managerCoachOrCoacheeDoc role._id
        input.js-role-name(type="text" value=role.name autofocus)
      else
        input.js-role-name(type="text" value=role.name disabled)
    hr
    label(style="padding-top: 5px")
      span.role-color-label
        | {{_ 'color'}}
      .palette-colors: each color in colors
        if isSelected role._id color
          span.card-label.checked-palette-color.palette-color.js-palette-color(class="card-details-{{color}}" data-color="{{color}}")
            i.fa.fa-check
        else
          span.card-label.palette-color.js-palette-color(class="card-details-{{color}}" data-color="{{color}}")
    hr
    table
      tbody
        tr
          th {{_ 'permission'}}
          th {{_ 'view'}}
          th {{_ 'create'}}
          th {{_ 'change'}}
        each group in groups
          tr(data-group=group)
            td {{group}}
            td
              a.flex.js-permission(class="{{#if isEnabled role group 'fetch'}}is-checked{{/if}}", data-access="fetch")
                .materialCheckBox(class="{{#if isEnabled role group 'fetch'}}is-checked{{/if}}")
            td
              a.flex.js-permission(class="{{#if isEnabled role group 'insert'}}is-checked{{/if}}", data-access="insert")
                .materialCheckBox(class="{{#if isEnabled role group 'insert'}}is-checked{{/if}}")
            td
              a.flex.js-permission(class="{{#if isEnabled role group 'update'}}is-checked{{/if}}", data-access="update")
                .materialCheckBox(class="{{#if isEnabled role group 'update'}}is-checked{{/if}}")

    div.buttonsContainer
      input.primary.wide(type="submit" value="{{_ 'save'}}")
      div
      unless managerCoachOrCoacheeDoc role._id
        input#deleteButton.primary.wide(type="button" value="{{_ 'delete'}}")

template(name="userGroupsGeneral")
  button#create-user-group.btn.btn-primary {{_ 'create-user-group'}}
  table
    tbody
      tr
        th {{_ 'title'}}
        th {{_ 'users-quota'}}   
        th {{_ 'used-users-quota'}}   
        th {{_ 'boards-quota'}}
        th {{_ 'used-boards-quota'}}    
        th {{_ 'createdAt'}} 
        th {{_ 'action'}}
      // if isAdmin
      if currentUser.isAdmin
        each userGroup in userGroupsList
          +userGroupRow(userGroupId=userGroup._id)

template(name="userGroupRow")
  tr
    td {{ userGroupData.title }}
    td {{ userGroupData.usersQuota }}
    td {{ userGroupData.usedUsersQuota }}
    td {{ userGroupData.boardsQuota }}
    td {{ userGroupData.usedBoardsQuota }}
    td {{ moment userGroupData.createdAt 'LLL' }}
    td
      a.edit-user-group
        | {{_ 'edit'}}

template(name="createUserGroupPopup")
  if loading.get
    +spinner
  else
    form
      label
        | {{_ 'title'}}
        span.error.hide.title-blank.user-group-not-created
          | {{_ 'error-title-blank'}}
        span.error.hide.title-duplicate.user-group-not-created
          | {{_ 'error-title-duplicate'}}
        input.js-user-group-title(type="text" value="" autofocus)
      label
        | {{_ 'boards-quota'}}
        span.error.hide.boards-quota-blank.user-group-not-created
          | {{_ 'error-boards-quota-blank'}}
        input.js-user-group-boards-quota(type="text" value="")
      label
        | {{_ 'users-quota'}}
        span.error.hide.users-quota-blank.user-group-not-created
          | {{_ 'error-users-quota-blank'}}
        input.js-user-group-users-quota(type="text" value="")
      hr
      div.buttonsContainer
        input.primary.wide(type="submit" value="{{_ 'save'}}")
        div
        input#cancelUserGroupCreation.primary.wide(type="button" value="{{_ 'cancel'}}")

template(name="editUserGroupPopup")
  if loading.get
    +spinner
  else
    form#editUserGroupPopup
      label.hide.userGroupId(type="text" value=userGroup._id)
      label
        | {{_ 'title'}}
        span.error.hide.title-blank.user-group-not-edited
          | {{_ 'error-title-blank'}}
        span.error.hide.title-duplicate.user-group-not-edited
          | {{_ 'error-title-duplicate'}}
        input.js-user-group-title(type="text" value=userGroup.title autofocus)
      label
        | {{_ 'boards-quota'}}
        span.error.hide.boards-quota-blank.user-group-not-edited
          | {{_ 'error-boards-quota-blank'}}
        input.js-user-group-boards-quota(type="text" value=userGroup.boardsQuota)
      label
        | {{_ 'users-quota'}}
        span.error.hide.users-quota-blank.user-group-not-edited
          | {{_ 'error-users-quota-blank'}}
        input.js-user-group-users-quota(type="text" value=userGroup.usersQuota)
      hr
      div.buttonsContainer
        input.primary.wide(type="submit" value="{{_ 'save'}}")
        div
        if notAsssignedToAnyUser
          input#deleteButton.primary.wide(type="button" value="{{_ 'delete'}}")

template(name="assignedUserGroupsGeneral")
  button#assign-user-to-user-group.btn.btn-primary {{_ 'add'}}
  table
    tbody
      tr
        th {{_ 'username'}}
        th {{_ 'email-address'}}    
        th {{_ 'user-group-title'}}
        th {{_ 'group-order'}}
        th {{_ 'action'}}
      // if isAdmin
      if currentUser.isAdmin
        each assignedUserGroup in assignedUserGroupsList
          +assignedUserGroupRow(assignedUserGroupId=assignedUserGroup._id)

template(name="assignedUserGroupRow")
  tr
    td {{ assignedUserGroupData.username }}
    td {{ assignedUserGroupData.email }}
    td {{ assignedUserGroupData.userGroupTitle }}
    td {{ assignedUserGroupData.groupOrder }}
    td
      a.edit-assigned-user-group
        | {{_ 'edit'}}

template(name="assignUserToUserGroupPopup")
  if loading.get
    +spinner
  else
    form
      label
        | {{_ 'username'}}
        .select-user-msg.error.hide.assigned-user-group-not-created {{_ 'error-userNotSelected'}}
        select.select-user.js-select-user
          option(value='', selected='selected') Select One
          // if isAdmin
          if currentUser.isAdmin
            each user in users
              option(value='{{user._id}}') {{user.username}}
      label
        | {{_ 'user-group'}}
        .select-user-group-msg.error.hide.assigned-user-group-not-created {{_ 'error-userGroupNotSelected'}}
        select.select-user-group.js-select-user-group
          option(value='', selected='selected') Select One
      label
        | {{_ 'group-order'}}
        span.error.hide.group-order-blank.assigned-user-group-not-created
          | {{_ 'error-group-order-blank'}}
        input.js-group-order(type="number" min="1" value="" onkeydown="return false")
      hr
      div.buttonsContainer
        input.primary.wide(type="submit" value="{{_ 'save'}}")
        div
        input#cancelAssignedUserGroupCreation.primary.wide(type="button" value="{{_ 'cancel'}}")

template(name="editAssignedUserGroupPopup")
  if loading.get
    +spinner
  else
    form#editAssignedUserGroupPopup
      label.hide.assignedUserGroupId(type="text" value=assignedUserGroup._id)
      label
        | {{_ 'username'}}
        .select-user-msg.error.hide.assigned-user-group-not-edited {{_ 'error-userNotSelected'}}
        select.select-user.js-select-user
          option(value='', selected='selected') Select One
          // if isAdmin
          if currentUser.isAdmin
            each user in users
              if specificRowUser user._id
                option(value='{{user._id}}' selected) {{user.username}}
              else
                option(value='{{user._id}}') {{user.username}}
      label
        | {{_ 'user-group'}}
        .select-user-group-msg.error.hide.assigned-user-group-not-edited {{_ 'error-userGroupNotSelected'}}
        select.select-user-group.js-select-user-group
          option(value='', selected='selected') Select One
          // if isAdmin
          if currentUser.isAdmin
            each userGroup in userGroups
              if specificRowUserGroup userGroup._id
                option(value='{{userGroup._id}}' selected) {{userGroup._id}}
      label
        | {{_ 'group-order'}}
        span.error.hide.group-order-blank.assigned-user-group-not-edited
          | {{_ 'error-group-order-blank'}}
        input.js-group-order(type="number" min="1" value=assignedUserGroup.groupOrder onkeydown="return false")
      hr
      div.buttonsContainer
        input.primary.wide(type="submit" value="{{_ 'save'}}")
        div
        input#deleteButton.primary.wide(type="button" value="{{_ 'delete'}}")
